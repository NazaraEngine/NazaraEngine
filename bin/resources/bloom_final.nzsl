[nzsl_version("1.0")]
module;

import Engine/ViewerData;

external
{
	[set(0), binding(0)] viewerData: uniform[ViewerData],
	//[set(0), binding(1)] colorTexture: sampler2D[f32],
	[set(0), binding(2)] bloomTexture: sampler2D[f32],
}

struct FragIn
{
	[location(0)] uv: vec2[f32]
}

struct FragOut
{
	[location(0)] color: vec4[f32]
}

struct VertIn
{
	[location(0)] pos: vec2[f32],
	[location(1)] uv: vec2[f32],
}

struct VertOut
{
	[location(0)] uv: vec2[f32],
	[builtin(position)] position: vec4[f32]
}

[entry(frag)]
fn main(input: FragIn) -> FragOut
{	
	let output: FragOut;
	output.color = /*colorTexture.Sample(fragcoord) + */bloomTexture.Sample(input.uv);

	return output;
}

[entry(vert)]
fn main(input: VertIn) -> VertOut
{
	let output: VertOut;
	output.position = vec4[f32](input.pos, 0.0, 1.0);
	output.uv = input.uv;

	return output;
}
