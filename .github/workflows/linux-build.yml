name: Linux-Build

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/workflows/windows-build.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'
      - 'README_en.md'
      - 'README_fr.md'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        arch: [x64]
        mode: [debug, releasedbg]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - uses: actions/checkout@v2

    # Install Qt (required for shader nodes editor)
    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    # Install Nazara dependencies
    - name: Update apt repositories
      run: sudo apt-get update

    # Install Nazara dependencies
    - name: Install system dependencies
      run: sudo apt-get install libsndfile1-dev libfreetype6-dev libsdl2-dev mesa-common-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libgl1-mesa-dev afl afl++ -y

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@dev

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "::set-output name=hash::$(xmake l utils.ci.packageskey)"
  
    # Cache xmake dependencies
    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v2
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
        key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}

    # Setup compilation mode for fuzzing and install project dependencies
    - name: Setup compilation mode for fuzzing and install project dependencies
      run: xmake config --ld=afl-clang++ --sh=afl-clang++ --ar=afl-clang++ --cxx=afl-clang++ --cxxflags="-fsanitize=fuzzer-no-link,address" --ldflags=-fsanitize=fuzzer-no-link,address --shflags=-fsanitize=fuzzer-no-link,address --arflags=-fsanitize=fuzzer-no-link,address --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes --verbose
      
    # Compile fuzzed binaries
    - name: Compile fuzzed binaries
      run: xmake -v
      
    # Run tests
    - name: Run tests
      run: ./bin/linux_x86_64_release/Fuzzing

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes --verbose --ld="" --sh="" --ar="" --cxx="g++" --cxxflags="" --ldflags="" --shflags="" --arflags=""

    # Build the engine
    - name: Build Nazara
      run: xmake -v

    # Install the result files
    - name: Install Nazara
      run: xmake install -vo package

    # Upload artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
        path: package
