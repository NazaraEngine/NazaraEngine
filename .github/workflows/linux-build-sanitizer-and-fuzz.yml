name: Sanitizer and fuzzing

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/workflows/coverage.yml'
      - '.github/workflows/linux-build.yml'
      - '.github/workflows/msys2-build.yml'
      - '.github/workflows/windows-build.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'
      - 'README_en.md'
      - 'README_fr.md'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        arch: [x86_64]
        mode: [asan]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - uses: actions/checkout@v2

    # Install Nazara dependencies
    - name: Update apt repositories
      run: sudo apt-get update

    # Install Nazara dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get install libsndfile1-dev libfreetype6-dev libsdl2-dev mesa-common-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libgl1-mesa-dev git -y
        sudo apt-get install libunwind-dev binutils-dev clang-11 -y
        sudo apt-get install libjpeg-progs -y

    # Install Honggfuzz
    - name: Build and install Hongfuzz
      run: |
        wget https://github.com/google/honggfuzz/archive/refs/tags/2.5.tar.gz -O honggfuzz.tar.gz
        tar -xzvf honggfuzz.tar.gz
        cd honggfuzz-*/
        make
        sudo make install

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@dev

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "::set-output name=hash::$(xmake l utils.ci.packageskey)"

    # Cache xmake dependencies
    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v2
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
        key: Linux-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake config --shadernodes=y --tests=y --tests-fuzzing=y --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --verbose --yes

    # Configure xmake with honggfuzz to build the engine
    - name: Configure xmake with honggfuzz
      run: xmake config --shadernodes=y --tests=y --tests-fuzzing=y --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --verbose --toolchain=hfuzz-clang

    # Build the engine
    - name: Build Nazara
      run: xmake

    # Run unit tests
    - name: Run unit tests
      run: xmake run NazaraUnitTests

    # Install to fuzz
    - name: Install Nazara compiled with ASAN
      run: xmake install -vo package

    # Create corpus dir
    - name: Create corpus dir
      run: mkdir input_corpus

    # Fuzz nazara
    - name: Fuzz nazara targets
      run: |
        honggfuzz -i input_corpus --exit_upon_crash --iteration 1000 --run_time 30 -P -- $(pwd)/bin/linux_x86_64_asan/Nazara2DPhysicsUnitTestsFuzzing ___FILE___
