name: macOS build

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/workflows/coverage.yml'
      - '.github/workflows/linux-build.yml'
      - '.github/workflows/msys2-build.yml'
      - '.github/workflows/windows-build.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'
      - 'README_en.md'
      - 'README_fr.md'

jobs:
  build:
    strategy:
      matrix:
        os: [macOS-latest]
        arch: [x86_64]
        mode: [debug, releasedbg]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - uses: actions/checkout@v2

    # Install system dependencies
    - name: Install system dependencies
      run: |
        brew install libx11

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@dev

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "::set-output name=hash::$(xmake l utils.ci.packageskey)"

    # Cache xmake dependencies
    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v2
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
        key: macOS-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-r4

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake config --shadernodes=y --tests=y --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes

    # Build the engine
    - name: Build Nazara
      run: |
        xmake build -v NazaraRenderer
        xmake build -v NazaraPhysics2D
        xmake build -v NazaraPhysics3D

    # Run unit tests
    #- name: Run unit tests
    #  if: matrix.mode != 'releasedbg'
    #  run: xmake run NazaraUnitTests

    # Install the result files
    # - name: Install Nazara
    #  run: xmake install -vo package

    # Upload artifacts
    # - uses: actions/upload-artifact@v2
    #  with:
    #    name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
    #    path: package
