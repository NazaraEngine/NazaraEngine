name: macOS build

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/workflows/coverage.yml'
      - '.github/workflows/linux-build.yml'
      - '.github/workflows/msys2-build.yml'
      - '.github/workflows/wasm-build.yml'
      - '.github/workflows/windows-build.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'
      - 'README_en.md'
      - 'README_fr.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest]
        kind: [shared, static]
        confs:
        - { runner: macOS-latest, arch: x86_64, mode: debug,      config: --shadernodes=y,          archive: true                    }
        - { runner: macOS-latest, arch: x86_64, mode: debug,      config: --shadernodes=y --asan=y, archive: false, cache_key: -asan }
        - { runner: macOS-latest, arch: x86_64, mode: debug,      config: --shadernodes=y --lsan=y, archive: false                   }
        - { runner: macOS-latest, arch: x86_64, mode: debug,      config: --shadernodes=y --tsan=y, archive: false                   }
        - { runner: macOS-latest, arch: x86_64, mode: releasedbg, config: --shadernodes=y,          archive: true                    }
        - { runner: macOS-14,     arch: arm64,  mode: debug,      config: "",                       archive: true                    }
        - { runner: macOS-14,     arch: arm64,  mode: debug,      config: --asan=y,                 archive: false, cache_key: -asan }
        - { runner: macOS-14,     arch: arm64,  mode: debug,      config: --lsan=y,                 archive: false                   }
        - { runner: macOS-14,     arch: arm64,  mode: debug,      config: --tsan=y,                 archive: false                   }
        - { runner: macOS-14,     arch: arm64,  mode: releasedbg, config: "",                       archive: true                    }

    runs-on: ${{ matrix.confs.runner }}
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}

    steps:
    - name: Get current date as package key
      id: cache_key
      run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT

    - name: Checkout repository
      uses: actions/checkout@v4

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@dev
        actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

    - run: xmake update -s github:SirLynix/xmake#test-macos

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake config --arch=${{ matrix.confs.arch }} --mode=${{ matrix.confs.mode }} --static=${{ matrix.kind == 'static' && 'yes' || 'no' }} ${{ matrix.confs.config }} --ccache=n --ffmpeg=y --tests=y --unitybuild=y --yes -D
